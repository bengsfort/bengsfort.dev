---
import type { CollectionEntry } from 'astro:content';

interface Props {
  id: string;
  project: CollectionEntry<'projects'>;
}

const { project, id } = Astro.props;
const { title, assets: _ } = project.data;

// CSS-only stuff is kinda limiting here, since we want so many animations.
// We may have to make this into a custom component that wraps a Dialog, and
// then add an API on top of that that calls showModal & triggers animations.
---

<style>
  .dialog-wrapper {
    position: absolute;
    inline-size: 0;
    block-size: 0;
    inset: 0;
  }

  .project-dialog {
    opacity: 0;
    transition: opacity 200ms;

    &::backdrop {
      opacity: 0;
      background: var(--color-bg);
      transition: opacity 200ms;
    }

    &.active {
      opacity: 1;
      transition: opacity 200ms 200ms;

      &::backdrop {
        opacity: 1;
      }
    }
  }

  .project-dialog::backdrop {
    background: var(--color-bg);
  }

  .project-dialog[open]::backdrop {
    animation: backdrop-fade-in 180ms ease-in forwards;
  }
</style>

<project-dialog id={id} class="dialog-wrapper">
  <dialog class="project-dialog" aria-modal="true">
    <form method="dialog">
      <h1>{title}</h1>
      <button>hehe</button>
    </form>
  </dialog>
</project-dialog>

<script src="./ProjectDialogElement.ts"></script>
