---
import type { CollectionEntry } from 'astro:content';
import ProjectDetailVideo from './ProjectDetailVideo.astro';

interface Props {
  id: string;
  project: CollectionEntry<'projects'>;
}

const { project, id } = Astro.props;
const {
  title,
  assets: _,
  type,
  platform,
  tech,
  role,
  url: _url,
  previewImg,
  featureVideo,
} = project.data;

let joinedProjectType = `${platform} ${type.join('/')}`.toLowerCase();

// Desktop Site sounds weird and unnatural, so lets make it more natural
if (joinedProjectType === 'desktop site') {
  joinedProjectType = 'Website';
}

const { Content } = await project.render();
---

<style>
  .dialog-wrapper {
    position: absolute;
    inline-size: 0;
    block-size: 0;
    inset: 0;
  }

  .project-dialog {
    box-sizing: border-box;
    block-size: 100%;
    inline-size: 100%;
    border: 0;
    opacity: 0;
    padding: 1rem 4rem;
    background: transparent;
    transition: opacity 200ms;

    &::backdrop {
      opacity: 0;
      background: var(--color-bg);
      transition: opacity 200ms;
    }

    &.active {
      opacity: 1;
      transition: opacity 200ms 200ms;

      &::backdrop {
        opacity: 1;
      }
    }
  }

  .project-dialog::backdrop {
    background: var(--color-bg);
  }

  .project-dialog[open]::backdrop {
    animation: backdrop-fade-in 180ms ease-in forwards;
  }

  .dialog-controls {
    position: absolute;
    inset-inline-start: 1rem;
    inset-block-start: 1rem;
  }

  .dialog-close-btn {
    background: transparent;
    border: none;
    outline: none;
    cursor: pointer;
  }

  .close-icon {
    position: relative;
    display: block;
    block-size: 2rem;
    inline-size: 2rem;

    &::before,
    &::after {
      content: '';
      position: absolute;
      height: 100%;
      width: 0.2rem;
      background-color: var(--color-text);
      transition: transform 200ms;
    }

    &::before {
      transform: rotate(45deg);
    }

    &::after {
      transform: rotate(-45deg);
    }

    &:hover {
      &::before {
        transform: rotate(-45deg);
      }

      &::after {
        transform: rotate(45deg);
      }
    }
  }

  .dialog-content {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: stretch;
    height: 100%;
    max-height: 100%;
  }

  .content-column {
    flex: 1;
    overflow: hidden;
  }

  .preview-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
</style>

<project-dialog id={id} class="dialog-wrapper">
  <dialog class="project-dialog" aria-modal="true">
    <nav class="dialog-controls">
      <button class="dialog-close-btn" data-close-modal>
        <span class="visually-hidden">Close dialog</span>
        <i class="close-icon" aria-hidden="true"></i>
      </button>
    </nav>

    <article class="dialog-content">
      <aside class="content-column preview-wrapper">
        <ProjectDetailVideo featureVideo={featureVideo} platform={platform} />
      </aside>

      <main class="content-column">
        <header>
          <h1>{title}</h1>
          <p>{joinedProjectType}</p>
          <p>Role: {role}</p>
          <p>Tech: {tech.join(', ')}</p>
        </header>
        <Content />
      </main>
    </article>
  </dialog>
</project-dialog>

<script src="./ProjectDialogElement.ts"></script>
